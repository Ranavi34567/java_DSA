// Exact(k)=Atmost(k)-Atmost(k-1)
// This sliding window approach is applicable for only binary sums 
class Solution {
    public int atMost(int[] nums,int goal){
        int ans=0;
        int r=0;
        int temp=0;
        int n=nums.length;
        int l=0;
        if(goal<0){
            return 0;
        }
        for(r=0;r<n;r++){
            if(nums[r]==1){
                temp++;
            }
            while(temp>goal){
                if(nums[l]==1){
                    temp--;
                } 
                l++;
            }
            ans+=r-l+1;
        }
        return ans;
        

    }
    public int numSubarraysWithSum(int[] nums, int goal) {
        return atMost(nums,goal)-atMost(nums,goal-1);
    
